!function(n){var e={};function r(t){if(e[t])return e[t].exports;var i=e[t]={i:t,l:!1,exports:{}};return n[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=n,r.c=e,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)r.d(t,i,function(e){return n[e]}.bind(null,i));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="/",r(r.s=0)}([function(n,e,r){r(1),n.exports=r(4)},function(n,e,r){r(2)(r(3))},function(n,e){n.exports=function(n){function e(n){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",n)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(n):"undefined"!=typeof eval?eval.call(null,n):e("EvalError: No eval function available")}catch(n){e(n)}}},function(n,e){n.exports='let taskList;\r\nlet url = "http://localhost:4000/tasks/";\r\n\r\n// let selectLabel = document.getElementById("selectall");\r\n// let labels = document.getElementsByClassName("labelSelected");\r\nconst chartView = document.getElementById("chartView");\r\nconst dashBoard = document.getElementById("dashBoard");\r\nconst addTask = document.getElementById("addTask");\r\nconst settings = document.getElementById("settings");\r\nconst taskName = document.getElementById("name")\r\nconst status = document.getElementById("status")\r\nconst assignee = document.getElementById("assignee");\r\nconst priority = document.getElementById("priority");\r\n// const toDo=document.getElementById("toDo");\r\n// const inProgress=document.getElementById("inProgress");\r\n// const devDone=document.getElementById("devDone");\r\n// const done=document.getElementById("done");\r\n// const inQA=document.getElementById("inQA");\r\n\r\n// function selectAll() {\r\n//     Object.values(labels).map(label => {\r\n//         label.checked = selectLabel.checked;\r\n//         ShowLabels(label)\r\n//     })\r\n// }\r\n\r\n// function ShowLabels(label) {\r\n//     let section = document.getElementById(label.name)\r\n//     if (label.checked) {\r\n//         section.className = "col-lg bg-light mx-2";\r\n//         if (Object.values(labels).filter(label => label.checked).length == 5) {\r\n//             selectLabel.checked = true;\r\n//         }\r\n//     }\r\n//     else {\r\n//         section.className = "hide"\r\n//         selectLabel.checked = false\r\n//     }\r\n// }\r\nlet labelsSelected={"toDo":"TO DO","inProgress":"IN PROGRESS","devDone":"DEV DONE","inQA":"IN QA","done":"DONE"}\r\nfunction intialize() {\r\n    getTasks(url).then(res => res.json().then(tasks => {\r\n        taskList = tasks;\r\n        taskList.map(task => CreateTask(task));\r\n        ChartView();\r\n      //  selectAll()\r\n    }))\r\n    Object.keys(labelsSelected).forEach(key =>addLabelsDiv(key))\r\n    //document.getElementById("sampleDiv").append(addLabelsDiv(),addLabelsDiv())\r\n}\r\n\r\nfunction getTasks(url) {\r\n    return fetch(url)\r\n}\r\n\r\n\r\nfunction updateTask(url, task) {\r\n    return fetch(url, {\r\n        method: "PUT",\r\n        headers: {\r\n            \'Content-Type\': \'application/json\',\r\n        },\r\n        body: JSON.stringify(task)\r\n    })\r\n}\r\n\r\nfunction removeTask(url) {\r\n    fetch(url, {\r\n        method: "DELETE"\r\n    })\r\n}\r\n\r\nfunction storeTask(url, task) {\r\n    return fetch(url, {\r\n        method: "POST",\r\n        headers: {\r\n            \'Content-Type\': \'application/json\',\r\n        },\r\n        body: JSON.stringify(task)\r\n    })\r\n}\r\n\r\nfunction addLabelsDiv(key)\r\n{\r\n    let parentDiv=document.createElement("div");\r\n    parentDiv.className="col-lg bg-light mx-2";\r\n    parentDiv.id=key;\r\n    parentDiv.ondrop=drop;\r\n    parentDiv.ondragover=allowDrop;\r\n    let childDiv=document.createElement("div");\r\n    childDiv.className="d-flex justify-content-left m-2"\r\n    let labelName=document.createElement("h5");\r\n    labelName.textContent=labelsSelected[key]\r\n    childDiv.appendChild(labelName);\r\n    parentDiv.appendChild(childDiv)\r\n    document.getElementById("labelsDiv").appendChild(parentDiv)\r\n}\r\n\r\n//need to check the arrays of status tasks\r\n\r\nfunction ChartView() {\r\n    var doTasks = taskList.filter(task=>task.status=="toDo")\r\n    var doingTasks = taskList.filter(task=>task.status=="inProgress")\r\n    var doneTasks = taskList.filter(task=>task.status=="done")\r\n    var devTasks =taskList.filter(task=>task.status=="devDone")\r\n    var qaTasks =taskList.filter(task=>task.status=="inQA")\r\n    // if (taskList.length > 0) {\r\n    //     taskList.forEach(element => {\r\n    //         if (element.status == "toDo") {\r\n    //             doTasks.push(element)\r\n    //         }\r\n    //         else if (element.status == "done") {\r\n    //             doneTasks.push(element)\r\n    //         }\r\n    //         else if (element.status == "inProgress") {\r\n    //             doingTasks.push(element)\r\n    //         }\r\n    //         else if (element.status == "inQA") {\r\n    //             qaTasks.push(element)\r\n    //         }\r\n    //         else if (element.status == "devDone") {\r\n    //             devTasks.push(element)\r\n    //         }\r\n    //     })\r\n    // }\r\n    var chart = new CanvasJS.Chart("chartContainer", {\r\n        animationEnabled: true, theme: "light2",\r\n        title: {\r\n            text: " Chart View Of Tasks:",\r\n        },\r\n        data: [{\r\n            type: "line",\r\n            startAngle: 90,\r\n            indexLabelFontSize: 18,\r\n            radius: 500,\r\n            yValueFormatString: "##0.00\\"%\\"",\r\n            indexLabel: "{label} {y}",\r\n            click: explodePie,\r\n            dataPoints:Object.keys(labelsSelected).map(label=>{\r\n                let obj={};\r\n                obj.y=GetTaskPercentage(label);\r\n                obj.label=labelsSelected[label];\r\n                return obj\r\n            })\r\n            //  [\r\n            //     { y: GetTaskPercentage("toDo"), label: "TODO" },\r\n            //     { y: GetTaskPercentage("inProgress"), label: "INPROGRESS" },\r\n            //     { y: GetTaskPercentage("done"), label: "DONE" },\r\n            //     { y: GetTaskPercentage("devDone"), label: "DEV DONE" },\r\n            //     { y: GetTaskPercentage("inQA"), label: "IN QA" }\r\n            // ]\r\n        }]\r\n    });\r\n    chart.render();\r\n\r\n    function GetTaskPercentage(type) {\r\n        if (type == "toDo") {\r\n            return doTasks.length > 0 ?\r\n                100 * doTasks.length / taskList.length :\r\n                0;\r\n        }\r\n        else if (type == "done") {\r\n            return doneTasks.length > 0 ?\r\n                100 * doneTasks.length / taskList.length :\r\n                0;\r\n        }\r\n        else if (type == "inProgress") {\r\n            return doingTasks.length > 0 ?\r\n                100 * doingTasks.length / taskList.length :\r\n                0;\r\n        }\r\n        else if (type == "inQA") {\r\n            return qaTasks.length > 0 ?\r\n                100 * qaTasks.length / taskList.length :\r\n                0;\r\n        }\r\n        else if (type == "devDone") {\r\n            return devTasks.length > 0 ?\r\n                100 * devTasks.length / taskList.length :\r\n                0;\r\n        }\r\n    }\r\n\r\n    function explodePie(e) {\r\n        for (var i = 0; i < e.dataSeries.dataPoints.length; i++) {\r\n            if (i !== e.dataPointIndex)\r\n                e.dataSeries.dataPoints[i].exploded = false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction showView(view) {\r\n    hideView();\r\n    document.getElementById(view).className = ""\r\n    if (view == "chartView") {\r\n        ChartView();\r\n    }\r\n}\r\n\r\nfunction hideView() {\r\n    chartView.className = dashBoard.className = addTask.className = settings.className = "hide"\r\n}\r\n\r\nfunction CreateTask(task) {\r\n    var node = document.getElementById(task.status);\r\n    if (node) {\r\n        let wrapper = document.createElement("div");\r\n        let card = document.createElement("div");\r\n        let body = document.createElement("div");\r\n        let title = document.createElement("p");\r\n        title.setAttribute("class", "card-title");\r\n        title.className = "text-primary"\r\n        title.textContent = "Task-" + task.id\r\n        let icon = document.createElement("i");\r\n        icon.className = "fa fa-user-circle text-primary"\r\n        icon.style.float = "right";\r\n        icon.style.fontSize = "large";\r\n        title.appendChild(icon)\r\n        let taskName = document.createElement("p");\r\n        taskName.textContent = task.name\r\n        taskName.className = "text-warning"\r\n        let assignee = document.createElement("p");\r\n        assignee.textContent = "Assign to:" + task.assignee;\r\n        assignee.className = "text-secondary"\r\n        let priority = document.createElement("span");\r\n        priority.textContent = task.priority\r\n        priority.className = "bg-success spanStyle text-white"\r\n        let icons = document.createElement("p");\r\n        let check = document.createElement("i")\r\n        check.className = "fa fa-check-square icon text-primary"\r\n        let equals = document.createElement("i")\r\n        equals.className = "fa fa-equals icon  text-warning"\r\n        icons.append(check, equals);\r\n        body.setAttribute("class", "card-body");\r\n        card.setAttribute("class", "card my-8");\r\n        card.style.width = "100%";\r\n        wrapper.setAttribute("class", "d-flex justify");\r\n        wrapper.setAttribute("draggable", "true");\r\n        wrapper.setAttribute("ondragstart", "drag(event)");\r\n        wrapper.id = task.id;\r\n        wrapper.style.cursor = "grab"\r\n        body.append(title, taskName, assignee, priority, icons);\r\n        card.appendChild(body);\r\n        wrapper.appendChild(card);\r\n        node.appendChild(wrapper);\r\n    }\r\n}\r\n\r\n// function GetTaskType(value) {\r\n//     switch (value) {\r\n//         case \'toDo\':\r\n//             return document.getElementById("toDo");\r\n//         case \'inProgress\':\r\n//             return document.getElementById("inProgress");\r\n//         case \'devDone\':\r\n//             return document.getElementById("devDone");\r\n//         case \'inQA\':\r\n//             return document.getElementById("inQA");\r\n//         case \'done\':\r\n//             return document.getElementById("done");\r\n//     }\r\n// }\r\n\r\nfunction allowDrop(ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n}\r\n\r\nfunction drag(ev) {\r\n    ev.dataTransfer.setData("text", ev.target.id);\r\n}\r\n\r\n\r\nfunction drop(ev) {\r\n    ev.preventDefault();\r\n    var data = ev.dataTransfer.getData("text");\r\n    if (Object.keys(labelsSelected).find(label=>label==ev.target.id)){\r\n        //(ev.target.id == "toDo" || ev.target.id == "inProgress" || ev.target.id == "done" || ev.target.id == "devDone" || ev.target.id == "inQA") {\r\n        ev.target.appendChild(document.getElementById(data));\r\n        changeStatus(data, ev.target.id)\r\n    }\r\n    else if (ev.target.id == "delete") {\r\n        var task = document.getElementById(data);\r\n        task.remove();\r\n        removeTask(url + data);\r\n    }\r\n}\r\n\r\nfunction changeStatus(id, type) {\r\n    let task = taskList.find(t => t.id == id);\r\n    task.status = type;\r\n    updateTask(url + task.id, task)\r\n}\r\n\r\n\r\nfunction addNewTask() {\r\n \r\n    if (status.value == "none" || priority.value == "none") {\r\n        alert("Alert Please fill all required fields.");\r\n        return;\r\n    }\r\n    else {\r\n        let task = {};\r\n        task.status = status.value;\r\n        task.name = taskName.value;\r\n        task.assignee = assignee.value;\r\n        task.priority = priority.value;\r\n        storeTask(url, task)\r\n            .then((res) => {\r\n                alert("Task Added SucessFully");\r\n                window.location.href = "index.html"\r\n            })\r\n    }\r\n}\r\n\r\nwindow.onload = intialize\r\n\r\n\r\nlet VSBoxCounter = function () {\r\n    let count = 0;\r\n    return {\r\n        set: function () {\r\n            return ++count;\r\n        }\r\n    };\r\n}();\r\n\r\nfunction vanillaSelectBox(domSelector, options) {\r\n    let self = this;\r\n    this.instanceOffset = VSBoxCounter.set();\r\n    this.domSelector = domSelector;\r\n    this.root = document.querySelector(domSelector)\r\n    this.main;\r\n    this.button;\r\n    this.title;\r\n    this.isMultiple = this.root.hasAttribute("multiple");\r\n    this.multipleSize = this.isMultiple && this.root.hasAttribute("size") ? parseInt(this.root.getAttribute("size")) : -1;\r\n    this.drop;\r\n    this.top;\r\n    this.left;\r\n    this.options;\r\n    this.listElements;\r\n    this.isDisabled = false;\r\n    this.search = false;\r\n    this.searchZone = null;\r\n    this.inputBox = null;\r\n    this.disabledItems = [];\r\n    this.ulminWidth = 140;\r\n    this.ulminHeight = 25;\r\n    this.userOptions = {\r\n        maxWidth: 500,\r\n        maxHeight: 400,\r\n        translations: { "all": "All", "items": "items" },\r\n        search: false,\r\n        placeHolder: "",\r\n        stayOpen: false\r\n    }\r\n    if (options) {\r\n        if (options.maxWidth != undefined) {\r\n            this.userOptions.maxWidth = options.maxWidth;\r\n        }\r\n        if (options.maxHeight != undefined) {\r\n            this.userOptions.maxHeight = options.maxHeight;\r\n        }\r\n        if (options.translations != undefined) {\r\n            this.userOptions.translations = options.translations;\r\n        }\r\n        if (options.placeHolder != undefined) {\r\n            this.userOptions.placeHolder = options.placeHolder;\r\n        }\r\n        if (options.search != undefined) {\r\n            this.search = options.search;\r\n        }\r\n        if (options.stayOpen != undefined) {\r\n            this.userOptions.stayOpen = options.stayOpen;\r\n        }\r\n    }\r\n    this.repositionMenu = function () {\r\n        let rect = self.main.getBoundingClientRect();\r\n        this.drop.style.left = rect.left + "px";\r\n        this.drop.style.top = rect.bottom + "px";\r\n    }\r\n\r\n    this.init = function () {\r\n        let self = this;\r\n        this.root.style.display = "none";\r\n        let already = document.getElementById("btn-group-" + self.domSelector);\r\n        if (already) {\r\n            already.remove();\r\n        }\r\n        this.main = document.createElement("div");\r\n        this.root.parentNode.insertBefore(this.main, this.root.nextSibling);\r\n        this.main.classList.add("vsb-main");\r\n        this.main.setAttribute("id", "btn-group-" + this.domSelector);\r\n        this.main.style.marginLeft = this.main.style.marginLeft;\r\n        if (self.userOptions.stayOpen) {\r\n            this.main.style.minHeight = (this.userOptions.maxHeight + 10) + "px";\r\n        }\r\n\r\n        let btnTag = self.userOptions.stayOpen ? "div" : "button";\r\n        this.button = document.createElement(btnTag);\r\n        this.main.appendChild(this.button);\r\n        this.title = document.createElement("span");\r\n        this.button.appendChild(this.title);\r\n        this.title.classList.add("title");\r\n        let caret = document.createElement("span");\r\n        this.button.appendChild(caret);\r\n        caret.classList.add("caret");\r\n        caret.style.position = "absolute";\r\n        caret.style.right = "8px";\r\n        caret.style.marginTop = "8px";\r\n        if (self.userOptions.stayOpen) {\r\n            caret.style.display = "none";\r\n            this.title.style.paddingLeft = "20px";\r\n            this.title.style.fontStyle = "italic";\r\n            this.title.style.verticalAlign = "20%";\r\n        }\r\n        let rect = this.button.getBoundingClientRect();\r\n        this.top = rect.bottom;\r\n        this.left = rect.left;\r\n        this.drop = document.createElement("div");\r\n        this.main.appendChild(this.drop);\r\n        this.drop.classList.add("vsb-menu");\r\n        this.drop.style.zIndex = 2000 - this.instanceOffset;\r\n        this.ul = document.createElement("ul");\r\n        this.drop.appendChild(this.ul);\r\n\r\n        if (!this.userOptions.stayOpen) {\r\n            window.addEventListener("resize", function (e) {\r\n                self.repositionMenu();\r\n            });\r\n\r\n            window.addEventListener("scroll", function (e) {\r\n                self.repositionMenu();\r\n            });\r\n        }\r\n\r\n        this.ul.style.maxHeight = this.userOptions.maxHeight + "px";\r\n        this.ul.style.minWidth = this.ulminWidth + "px";\r\n        this.ul.style.minHeight = this.ulminHeight + "px";\r\n        if (this.isMultiple) {\r\n            this.ul.classList.add("multi");\r\n        }\r\n        let selectedTexts = ""\r\n        let sep = "";\r\n        let nrActives = 0;\r\n\r\n        if (this.search) {\r\n            this.searchZone = document.createElement("div");\r\n            this.ul.appendChild(this.searchZone);\r\n            this.searchZone.classList.add("vsb-js-search-zone");\r\n            this.searchZone.style.zIndex = 2001 - this.instanceOffset;\r\n            this.inputBox = document.createElement("input");\r\n            this.searchZone.appendChild(this.inputBox);\r\n            this.inputBox.setAttribute("type", "text");\r\n            this.inputBox.setAttribute("id", "search_" + this.domSelector);\r\n\r\n            let fontSizeForP = this.isMultiple ? "8px" : "6px";\r\n            var para = document.createElement("p");\r\n            this.ul.appendChild(para);\r\n            para.style.fontSize = fontSizeForP;\r\n            para.innerHTML = "&nbsp;";\r\n            this.ul.addEventListener("scroll", function (e) {\r\n                var y = this.scrollTop;\r\n                self.searchZone.parentNode.style.top = y + "px";\r\n            });\r\n        }\r\n        this.options = document.querySelectorAll(this.domSelector + " option");\r\n        Array.prototype.slice.call(this.options).forEach(function (x) {\r\n            let text = x.textContent;\r\n            let value = x.value;\r\n            let classes = x.getAttribute("class");\r\n            if (classes) {\r\n                classes = classes.split(" ");\r\n            }\r\n            else {\r\n                classes = [];\r\n            }\r\n            let li = document.createElement("li");\r\n            let isSelected = x.hasAttribute("selected");\r\n            let isDisabled = x.hasAttribute("disabled");\r\n            self.ul.appendChild(li);\r\n            li.setAttribute("data-value", value);\r\n            li.setAttribute("data-text", text);\r\n            li.onclick=hideLabel\r\n            if (classes.length != 0) {\r\n                classes.forEach(function (x) {\r\n                    li.classList.add(x);\r\n                });\r\n            }\r\n            if (isSelected) {\r\n                nrActives++;\r\n                selectedTexts += sep + text;\r\n                sep = ",";\r\n                li.classList.add("active");\r\n                if (!self.isMultiple) {\r\n                    self.title.textContent = text;\r\n                    if (classes.length != 0) {\r\n                        classes.forEach(function (x) {\r\n                            self.title.classList.add(x);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (isDisabled) {\r\n                li.classList.add("disabled");\r\n            }\r\n            li.appendChild(document.createTextNode(text));\r\n        });\r\n        if (self.multipleSize != -1) {\r\n            if (nrActives > self.multipleSize) {\r\n                let wordForItems = self.userOptions.translations.items || "items"\r\n                selectedTexts = nrActives + " " + wordForItems;\r\n            }\r\n        }\r\n        if (self.isMultiple) {\r\n            self.title.innerHTML = selectedTexts;\r\n        }\r\n        if (self.userOptions.placeHolder != "" && self.title.textContent == "") {\r\n            self.title.textContent = self.userOptions.placeHolder;\r\n        }\r\n        this.listElements = this.drop.querySelectorAll("li");\r\n        if (self.search) {\r\n            self.inputBox.addEventListener("keyup", function (e) {\r\n                let searchValue = e.target.value.toUpperCase();\r\n                let searchValueLength = searchValue.length;\r\n                if (searchValueLength < 2) {\r\n                    Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                        x.classList.remove("hide");\r\n                    });\r\n                } else {\r\n                    Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                        let text = x.getAttribute("data-text").toUpperCase();\r\n                        if (text.indexOf(searchValue) == -1) {\r\n                            x.classList.add("hide");\r\n                        } else {\r\n                            x.classList.remove("hide");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (self.userOptions.stayOpen) {\r\n            self.drop.style.display = "block";\r\n            self.drop.style.boxShadow = "none";\r\n            self.drop.style.minHeight = (this.userOptions.maxHeight + 10) + "px";\r\n            self.drop.style.position = "relative";\r\n            self.drop.style.left = "0px";\r\n            self.drop.style.top = "0px";\r\n            self.button.style.border = "none";\r\n        } else {\r\n            this.main.addEventListener("click", function (e) {\r\n                if (self.isDisabled) return;\r\n                self.drop.style.left = self.left + "px";\r\n                self.drop.style.top = self.top + "px";\r\n                self.drop.style.display = "block";\r\n                document.addEventListener("click", docListener);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (!self.userOptions.stayOpen) {\r\n                    self.repositionMenu();\r\n                }\r\n            });\r\n        }\r\n        this.drop.addEventListener("click", function (e) {\r\n            if (self.isDisabled) return;\r\n\r\n            if (!e.target.hasAttribute("data-value")) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n            let choiceValue = e.target.getAttribute("data-value");\r\n            let choiceText = e.target.getAttribute("data-text");\r\n            let className = e.target.getAttribute("class");\r\n            if (className && className.indexOf("disabled") != -1) {\r\n                return;\r\n            }\r\n            if (!self.isMultiple) {\r\n                self.root.value = choiceValue;\r\n                self.title.textContent = choiceText;\r\n                if (className) {\r\n                    self.title.setAttribute("class", className + " title");\r\n                } else {\r\n                    self.title.setAttribute("class", "title");\r\n                }\r\n                Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                    x.classList.remove("active");\r\n                });\r\n                if (choiceText != "") {\r\n                    e.target.classList.add("active");\r\n                }\r\n                self.privateSendChange();\r\n                if (!self.userOptions.stayOpen) {\r\n                    docListener();\r\n                }\r\n            } else {\r\n                let wasActive = false;\r\n                if (className) {\r\n                    wasActive = className.indexOf("active") != -1;\r\n                }\r\n                if (wasActive) {\r\n                    e.target.classList.remove("active");\r\n                } else {\r\n                    e.target.classList.add("active");\r\n                }\r\n                let selectedTexts = ""\r\n                let sep = "";\r\n                let nrActives = 0;\r\n                let nrAll = 0;\r\n                for (let i = 0; i < self.options.length; i++) {\r\n                    nrAll++;\r\n                    if (self.options[i].value == choiceValue) {\r\n                        self.options[i].selected = !wasActive;\r\n                    }\r\n                    if (self.options[i].selected) {\r\n                        nrActives++;\r\n                        selectedTexts += sep + self.options[i].textContent;\r\n                        sep = ",";\r\n                    }\r\n                }\r\n                if (nrAll == nrActives) {\r\n                    let wordForAll = self.userOptions.translations.all || "all";\r\n                    selectedTexts = wordForAll;\r\n                } else if (self.multipleSize != -1) {\r\n                    if (nrActives > self.multipleSize) {\r\n                        let wordForItems = self.userOptions.translations.items || "items"\r\n                        selectedTexts = nrActives + " " + wordForItems;\r\n                    }\r\n                }\r\n                self.title.textContent = selectedTexts;\r\n                self.privateSendChange();\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (self.userOptions.placeHolder != "" && self.title.textContent == "") {\r\n                self.title.textContent = self.userOptions.placeHolder;\r\n            }\r\n        });\r\n        function docListener() {\r\n            document.removeEventListener("click", docListener);\r\n            self.drop.style.display = "none";\r\n            if (self.search) {\r\n                self.inputBox.value = "";\r\n                Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                    x.classList.remove("hide");\r\n                });\r\n            }\r\n        }\r\n    }\r\n    this.init();\r\n}\r\n\r\nvanillaSelectBox.prototype.disableItems = function (values) {\r\n    let self = this;\r\n    let foundValues = [];\r\n    if (vanillaSelectBox_type(values) == "string") {\r\n        values = values.split(",");\r\n    }\r\n\r\n    if (vanillaSelectBox_type(values) == "array") {\r\n        Array.prototype.slice.call(self.options).forEach(function (x) {\r\n            if (values.indexOf(x.value) != -1) {\r\n                foundValues.push(x.value);\r\n                x.setAttribute("disabled", "");\r\n            }\r\n        });\r\n    }\r\n    Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n        let val = x.getAttribute("data-value");\r\n        if (foundValues.indexOf(val) != -1) {\r\n            x.classList.add("disabled");\r\n        }\r\n    });\r\n\r\n\r\n}\r\n\r\nvanillaSelectBox.prototype.enableItems = function (values) {\r\n    let self = this;\r\n    let foundValues = [];\r\n    if (vanillaSelectBox_type(values) == "string") {\r\n        values = values.split(",");\r\n    }\r\n\r\n    if (vanillaSelectBox_type(values) == "array") {\r\n        Array.prototype.slice.call(self.options).forEach(function (x) {\r\n            if (values.indexOf(x.value) != -1) {\r\n                foundValues.push(x.value);\r\n                x.removeAttribute("disabled");\r\n            }\r\n        });\r\n    }\r\n\r\n    Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n        if (foundValues.indexOf(x.getAttribute("data-value")) != -1) {\r\n            x.classList.remove("disabled");\r\n        }\r\n    });\r\n}\r\n\r\nvanillaSelectBox.prototype.setValue = function (values) {\r\n    let self = this;\r\n    if (values == null || values == undefined || values == "") {\r\n        self.empty();\r\n    } else {\r\n        if (self.isMultiple) {\r\n            if (vanillaSelectBox_type(values) == "string") {\r\n                if (values == "all") {\r\n                    values = [];\r\n                    Array.prototype.slice.call(self.options).forEach(function (x) {\r\n                        values.push(x.value);\r\n                    });\r\n                } else {\r\n                    values = values.split(",");\r\n                }\r\n            }\r\n            let foundValues = [];\r\n            if (vanillaSelectBox_type(values) == "array") {\r\n                Array.prototype.slice.call(self.options).forEach(function (x) {\r\n                    if (values.indexOf(x.value) != -1) {\r\n                        x.selected = true;\r\n                        foundValues.push(x.value);\r\n                    } else {\r\n                        x.selected = false;\r\n                    }\r\n                });\r\n                let selectedTexts = ""\r\n                let sep = "";\r\n                let nrActives = 0;\r\n                let nrAll = 0;\r\n                Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                    nrAll++;\r\n                    if (foundValues.indexOf(x.getAttribute("data-value")) != -1) {\r\n                        x.classList.add("active");\r\n                        nrActives++;\r\n                        selectedTexts += sep + x.getAttribute("data-text");\r\n                        sep = ",";\r\n                    } else {\r\n                        x.classList.remove("active");\r\n                    }\r\n                });\r\n                if (nrAll == nrActives) {\r\n                    let wordForAll = self.userOptions.translations.all || "all";\r\n                    selectedTexts = wordForAll;\r\n                } else if (self.multipleSize != -1) {\r\n                    if (nrActives > self.multipleSize) {\r\n                        let wordForItems = self.userOptions.translations.items || "items"\r\n                        selectedTexts = nrActives + " " + wordForItems;\r\n                    }\r\n                }\r\n                self.title.textContent = selectedTexts;\r\n                self.privateSendChange();\r\n            }\r\n        } else {\r\n            let found = false;\r\n            let text = "";\r\n            let classNames = ""\r\n            Array.prototype.slice.call(self.listElements).forEach(function (x) {\r\n                if (x.getAttribute("data-value") == values) {\r\n                    x.classList.add("active");\r\n                    found = true;\r\n                    text = x.getAttribute("data-text")\r\n                } else {\r\n                    x.classList.remove("active");\r\n                }\r\n            });\r\n            Array.prototype.slice.call(self.options).forEach(function (x) {\r\n                if (x.value == values) {\r\n                    x.selected = true;\r\n                    className = x.getAttribute("class");\r\n                    if (!className) className = "";\r\n                } else {\r\n                    x.selected = false;\r\n                }\r\n            });\r\n            if (found) {\r\n                self.title.textContent = text;\r\n                if (self.userOptions.placeHolder != "" && self.title.textContent == "") {\r\n                    self.title.textContent = self.userOptions.placeHolder;\r\n                }\r\n                if (className != "") {\r\n                    self.title.setAttribute("class", className + " title");\r\n                } else {\r\n                    self.title.setAttribute("class", "title");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvanillaSelectBox.prototype.privateSendChange = function () {\r\n    let event = document.createEvent(\'HTMLEvents\');\r\n    event.initEvent(\'change\', true, false);\r\n    this.root.dispatchEvent(event);\r\n\r\n}\r\n\r\nvanillaSelectBox.prototype.empty = function () {\r\n    Array.prototype.slice.call(this.listElements).forEach(function (x) {\r\n        x.classList.remove("active");\r\n    });\r\n    Array.prototype.slice.call(this.options).forEach(function (x) {\r\n        x.selected = false;\r\n    });\r\n    this.title.textContent = "";\r\n    if (this.userOptions.placeHolder != "" && this.title.textContent == "") {\r\n        this.title.textContent = this.userOptions.placeHolder;\r\n    }\r\n    this.privateSendChange();\r\n}\r\n\r\nvanillaSelectBox.prototype.destroy = function () {\r\n    let already = document.getElementById("btn-group-" + this.domSelector);\r\n    if (already) {\r\n        already.remove();\r\n        this.root.style.display = "inline-block";\r\n    }\r\n}\r\nvanillaSelectBox.prototype.disable = function () {\r\n    let already = document.getElementById("btn-group-" + this.domSelector);\r\n    if (already) {\r\n        button = already.querySelector("button")\r\n        if (button) button.classList.add("disabled");\r\n        this.isDisabled = true;\r\n    }\r\n}\r\nvanillaSelectBox.prototype.enable = function () {\r\n    let already = document.getElementById("btn-group-" + this.domSelector);\r\n    if (already) {\r\n        button = already.querySelector("button")\r\n        if (button) button.classList.remove("disabled");\r\n        this.isDisabled = false;\r\n    }\r\n}\r\n\r\n\r\n\r\nvanillaSelectBox.prototype.showOptions = function () {\r\n    console.log(this.userOptions);\r\n}\r\n// Polyfills for IE\r\nif (!(\'remove\' in Element.prototype)) {\r\n    Element.prototype.remove = function () {\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n    };\r\n}\r\n\r\nfunction vanillaSelectBox_type(target) {\r\n    const computedType = Object.prototype.toString.call(target);\r\n    const stripped = computedType.replace("[object ", "").replace("]", "");\r\n    const lowercase = stripped.toLowerCase();\r\n    return lowercase;\r\n}\r\n\r\nlet mySelect = new vanillaSelectBox("#myMulti", {\r\n    translations: {\r\n        "all": "All",\r\n        "items": "items"\r\n    },\r\n    placeHolder: \'Select the labels to Display\',\r\n});\r\nmySelect.setValue(["toDo","inProgress","devDone","done","inQA"]);\r\n\r\nfunction hideLabel(event)\r\n{\r\n    let deleteTask=document.getElementById("deleteTask")\r\n    let activelabels=document.getElementsByClassName("active")\r\n    debugger\r\n    if(event.target.className=="active")\r\n    {\r\n        document.getElementById(event.target.dataset.value).className="hide"\r\n        if(document.getElementsByClassName("active").length==1){\r\n            deleteTask.className="hide"\r\n        }\r\n    }\r\n    else{\r\n        document.getElementById(event.target.dataset.value).className="col-lg bg-light mx-2"\r\n        deleteTask.className=""\r\n    }\r\n\r\n}'},function(n,e,r){var t=r(5),i=r(6);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var s={insert:"head",singleton:!1};t(i,s);n.exports=i.locals||{}},function(n,e,r){"use strict";var t,i=function(){return void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t},s=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),a=[];function l(n){for(var e=-1,r=0;r<a.length;r++)if(a[r].identifier===n){e=r;break}return e}function o(n,e){for(var r={},t=[],i=0;i<n.length;i++){var s=n[i],o=e.base?s[0]+e.base:s[0],d=r[o]||0,c="".concat(o," ").concat(d);r[o]=d+1;var p=l(c),u={css:s[1],media:s[2],sourceMap:s[3]};-1!==p?(a[p].references++,a[p].updater(u)):a.push({identifier:c,updater:x(u,e),references:1}),t.push(c)}return t}function d(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var i=r.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var a=s(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,p=(c=[],function(n,e){return c[n]=e,c.filter(Boolean).join("\n")});function u(n,e,r,t){var i=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=p(e,i);else{var s=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(s,a[e]):n.appendChild(s)}}function f(n,e,r){var t=r.css,i=r.media,s=r.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),s&&btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var m=null,h=0;function x(n,e){var r,t,i;if(e.singleton){var s=h++;r=m||(m=d(e)),t=u.bind(null,r,s,!1),i=u.bind(null,r,s,!0)}else r=d(e),t=f.bind(null,r,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=i());var r=o(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var i=l(r[t]);a[i].references--}for(var s=o(n,e),d=0;d<r.length;d++){var c=l(r[d]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}r=s}}}},function(n,e,r){(e=r(7)(!1)).push([n.i,'body {\r\n    font-family: "Lato", sans-serif;\r\n}\r\n.columnOne{\r\n    text-align: right;\r\n    padding-top: 0.4em;\r\n    margin: 0em;\r\n}\r\n.columnTwo{\r\n    text-align: left;\r\n    padding: 0em;\r\n    margin-bottom: 0.2em;\r\n}\r\n.backnavStyle\r\n{\r\n    color: lightgrey;\r\n    background-color: whitesmoke;\r\n    width: 1.75em;\r\n    height: 1.75em;\r\n    border-radius: 1em;\r\n    text-align: center;\r\n    padding-top: 0.3em;\r\n    font-size: 2em;\r\n    top: 0.5em;\r\n    left: 0.2em;\r\n}\r\n.icon{\r\n    margin-right :10px;\r\n    font-size:20px;\r\n    color:rgb(201, 192, 192);\r\n}\r\n.spanStyle{\r\n    padding-left: 5px ;\r\n    padding-right: 5px ;\r\n}\r\n.hide{\r\n    display: none\r\n}\r\n\r\n.mx-2{\r\n    padding:5px;\r\n    margin:0.3rem !important;\r\n    margin-right: 0em !important;\r\n}\r\n.m-2\r\n{\r\n    margin:0.3rem !important;\r\n}\r\n\r\n.sidenav {\r\n    height: 100%;\r\n    width: 50px;\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: grey;\r\n    overflow-x: hidden;\r\n    padding-top: 20px;\r\n}\r\n\r\n.sidenav a {\r\n    padding: 6px 8px 6px 16px;\r\n    text-decoration: none;\r\n    font-size: 25px;\r\n    color: #818181;\r\n    display: block;\r\n}\r\n\r\n/* span {\r\n    color: black\r\n} */\r\n\r\n.sidenav a,\r\ni:hover {\r\n    color: gold\r\n}\r\n\r\nh2 {\r\n    margin-top: 10px;\r\n}\r\n\r\na {\r\n    padding-left: 10px;\r\n}\r\ni{\r\n    color:black;\r\n}\r\n\r\n.row{\r\n    margin-left:0px !important;\r\n}\r\n.main {\r\n    margin-left: 60px;\r\n    font-size: 15px; \r\n    padding: 0px 10px;\r\n   \r\n}\r\n\r\n@media screen and (max-height: 450px) {\r\n    .sidenav {\r\n        padding-top: 15px;\r\n    }\r\n\r\n    .sidenav a {\r\n        font-size: 18px;\r\n    }\r\n}\r\n\r\n\r\n/* \r\n.drop {\r\n    position: relative;\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n  }\r\n  .drop.open {\r\n    z-index: 100;\r\n  }\r\n  .drop.open .drop-screen {\r\n    z-index: 100;\r\n    display: block;\r\n  }\r\n  .drop.open .drop-options {\r\n    z-index: 200;\r\n    max-height: 200px;\r\n  }\r\n  .drop.open .drop-display {\r\n    z-index: 200;\r\n    border-color: #465;\r\n  }\r\n  .drop select {\r\n    display: none;\r\n  }\r\n  .drop .drop-screen {\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000;\r\n    top: 0px;\r\n    left: 0px;\r\n    opacity: 0;\r\n    display: none;\r\n    z-index: 1;\r\n  }\r\n  \r\n  .link {\r\n    text-align: center;\r\n    margin: 20px 0px;\r\n    color:#8CACD7;\r\n  }\r\n  \r\n  \r\n  .drop .drop-display {\r\n    position: relative;\r\n    padding: 0px 20px 5px 5px;\r\n    border: 1px solid #444;\r\n    width: 100%;\r\n    background: #FFF;\r\n    z-index: 1;\r\n    margin: 0px;\r\n    font-size: 16px;\r\n    min-height: 58px;\r\n  }\r\n  .drop .drop-display:hover:after {\r\n    opacity: 0.75;\r\n  }\r\n  .drop .drop-display:after {\r\n    font-family: \'Material Icons\';\r\n    content: "\\e5c6";\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 12px;\r\n    font-size: 24px;\r\n    color: #444;\r\n  }\r\n  .drop .drop-display .item {\r\n    position: relative;\r\n    display: inline-block;\r\n    border: 1px solid #333;\r\n    margin: 5px 5px -4px 0px;\r\n    padding: 0px 25px 0px 10px;\r\n    overflow: hidden;\r\n    height: 40px;\r\n    line-height: 36px;\r\n  }\r\n  .drop .drop-display .item .btnclose {\r\n    color: #444;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    right: 5px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .drop .drop-display .item .btnclose:hover {\r\n    opacity: 0.75;\r\n  }\r\n  .drop .drop-display .item.remove {\r\n    -webkit-animation: removeSelected 0.2s, hide 1s infinite;\r\n            animation: removeSelected 0.2s, hide 1s infinite;\r\n    -webkit-animation-delay: 0s, 0.2s;\r\n            animation-delay: 0s, 0.2s;\r\n  }\r\n  .drop .drop-display .item.add {\r\n    -webkit-animation: addSelected 0.2s;\r\n            animation: addSelected 0.2s;\r\n  }\r\n  .drop .drop-display .item.hide {\r\n    display: none;\r\n  }\r\n  .drop .drop-options {\r\n    background: #444;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n    position: absolute;\r\n    width: 100%;\r\n    max-height: 0px;\r\n    overflow-y: auto;\r\n    transition: all 0.25s linear;\r\n    z-index: 1;\r\n  }\r\n  .drop .drop-options a {\r\n    display: block;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    padding: 0px 20px;\r\n    color: white;\r\n    position: relative;\r\n    max-height: 40px;\r\n    transition: all 1s;\r\n    overflow: hidden;\r\n  }\r\n  .drop .drop-options a:hover {\r\n    background: #465;\r\n    cursor: pointer;\r\n  }\r\n  .drop .drop-options a.remove {\r\n    -webkit-animation: removeOption 0.2s;\r\n            animation: removeOption 0.2s;\r\n    max-height: 0px;\r\n  }\r\n  .drop .drop-options a.add {\r\n    -webkit-animation: addOption 0.2s;\r\n            animation: addOption 0.2s;\r\n  }\r\n  .drop .drop-options a.hide {\r\n    display: none;\r\n  }\r\n\r\n  \r\n@-webkit-keyframes pop {\r\n    from {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n  }\r\n  \r\n  @keyframes pop {\r\n    from {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n  }\r\n  @-webkit-keyframes removeOption {\r\n    from {\r\n      max-height: 40px;\r\n    }\r\n    to {\r\n      max-height: 0px;\r\n    }\r\n  }\r\n  @keyframes removeOption {\r\n    from {\r\n      max-height: 40px;\r\n    }\r\n    to {\r\n      max-height: 0px;\r\n    }\r\n  }\r\n  @-webkit-keyframes addOption {\r\n    from {\r\n      max-height: 0px;\r\n    }\r\n    to {\r\n      max-height: 40px;\r\n    }\r\n  }\r\n  @keyframes addOption {\r\n    from {\r\n      max-height: 0px;\r\n    }\r\n    to {\r\n      max-height: 40px;\r\n    }\r\n  }\r\n  @-webkit-keyframes removeSelected {\r\n    from {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n  }\r\n  @keyframes removeSelected {\r\n    from {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n  }\r\n  @-webkit-keyframes addSelected {\r\n    from {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes addSelected {\r\n    from {\r\n      -webkit-transform: scale(0);\r\n              transform: scale(0);\r\n    }\r\n    to {\r\n      -webkit-transform: scale(1);\r\n              transform: scale(1);\r\n    }\r\n  }\r\n  @-webkit-keyframes hide {\r\n    from, to {\r\n      max-height: 0px;\r\n      max-width: 0px;\r\n      padding: 0px;\r\n      margin: 0px;\r\n      border-width: 0px;\r\n    }\r\n  }\r\n  @keyframes hide {\r\n    from, to {\r\n      max-height: 0px;\r\n      max-width: 0px;\r\n      padding: 0px;\r\n      margin: 0px;\r\n      border-width: 0px;\r\n    }\r\n  }\r\n\r\n  */\r\n/* body * {\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    padding: 0px;\r\n    color: #222;\r\n  } */\r\n  body section {\r\n    margin-bottom: 10px;\r\n  } \r\n  *, ::after, ::before {\r\n    box-sizing: content-box;\r\n    }\r\n  /* .container {\r\n    max-width: 600px;\r\n    margin: 40px auto;\r\n    background: #cdcdcd;\r\n    min-height: 330px;\r\n    height: 400px;\r\n    padding: 20px 20px;\r\n  } */\r\n\r\n\r\n  \r\n.hide{\r\n\tdisplay:none !important;\r\n}\r\n\r\n.vsb-menu{\r\n  cursor:pointer;\r\n  z-index:1000;\r\n  display:none;\r\n  position:fixed;\r\n  border:1px solid #B2B2B2;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid rgba(0,0,0,.15);\r\n  box-shadow: 0 6px 12px rgba(0,0,0,.175);\r\n  border-radius:4px;\r\n  font-size : 11px;\r\n}\r\n\r\n.vsb-js-search-zone{\r\n\tposition:absolute;\r\n    z-index:1001;\r\n\twidth: 80%;\r\n\tmin-height:1.8em;\r\n\tpadding: 2px;\r\n\tbackground-color: #fff;\r\n}\r\n.vsb-js-search-zone input{\r\n\tborder: 1px solid grey;margin-left: 2px;width: 96%;border-radius: 4px;\r\n}\r\n\r\n.vsb-main{\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tvertical-align: middle;\r\n\ttext-align:left;\r\n}\r\n\r\n.vsb-menu li{\r\n\tdisplay: list-item;\r\n\tfont-size: 12px;\r\n\tbackground-color: #fff;\r\n\tmin-height:1.4em;\r\n\tpadding: 0.2em;\r\n}\r\n\r\n.vsb-menu  li:hover {\r\n\tbackground: linear-gradient(#f5f5f5, #e8e8e8);\r\n}\r\n\r\n .vsb-menu  ul{\r\n  user-select:none;\r\n  list-style:none;\r\n  white-space: nowrap;\r\n  margin:0px;\r\n  margin-top:4px;\r\n  padding-left:10px;\r\n  padding-right:10px;\r\n  padding-bottom:3px;\r\n  color: #333;\r\n  cursor:pointer;\r\n  overflow-y:auto;\r\n}\r\n\r\nli.disabled{\r\n\tcursor:not-allowed;\r\n\topacity:0.3;\t\r\n\tbackground-color: #999;\r\n}\r\n\r\n.vsb-main button{\r\n\tmin-width: 120px;\r\n\tborder-radius: 1rem;\r\n\ttext-align: left;\r\n\tz-index: 1;\r\n\tcolor: #333;\r\n\tbackground: white !important;\r\n\tborder: 1px solid #999 !important;\r\n\tline-height:20px;\r\n    font-size:14px;\r\n    padding-left: 15px;\r\n    margin-left:8px;\r\n}\r\n\r\n.vsb-main button.disabled{\r\n\tcursor:not-allowed;\r\n\topacity:0.65;\r\n}\r\n\r\n.vsb-main .title {\r\n\tmargin-right: 16px;\r\n\tuser-select:none;\r\n}\r\n\r\n.vsb-main li:hover {\r\n\tbackground: linear-gradient(#f5f5f5, #e8e8e8);\r\n}\r\n\r\n.vsb-main ul{\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.vsb-menu li {\r\n\tfont-size: 14px;\r\n\tbackground-color: #fff;\r\n\tmin-height:1.4em;\r\n\tpadding: 0.2em 2em 0.2em 1em;\r\n}\r\n\r\n\r\n.vsb-menu :not(.multi) li.active::before {\r\n\t  content: "";\r\n\t  display: inline-block;\r\n\t  font-size: inherit;\r\n\t  float:left;\r\n\t  margin-left:-16px;\r\n\t  display: inline-block;\r\n\t  transform: rotate(45deg);\r\n\t  height: 10px;\r\n\t  width:  5px;\r\n\t  border-bottom:  3px solid black;\r\n\t  border-right:  3px solid black;\r\n\t  border-radius:2px;\r\n}\r\n\r\n\r\n.vsb-menu .multi li {\r\n\tfont-size: 14px;\r\n\tbackground-color: #fff;\r\n\tmin-height:1.4em;\r\n\tpadding: 0.2em 2em 0.2em 26px;\r\n}\r\n\r\n.vsb-menu .multi li::before{\r\n  content: "";\r\n  display: inline-block;\r\n  font-size: inherit;\r\n  float:left;\r\n  font-weight:bold;\r\n  margin-left:-22px;\r\n  margin-right:2px;\r\n  border : 1px solid;\r\n  border-radius : 3px;\r\n  padding : 7px;\r\n  margin-top:0px;\r\n  color:black;\r\n}\r\n\r\n\r\n.vsb-menu .multi li.active::after {\r\n\t  content: "";\r\n\t  display: inline-block;\r\n\t  font-size: inherit;\r\n\t  color: #333;\r\n\t  float:left;\r\n\t  margin-left:-18px;\r\n\t  display: inline-block;\r\n\t  transform: rotate(45deg);\r\n\t  margin-top:2px;\r\n\t  height: 8px;\r\n\t  width:  4px;\r\n\t  border-bottom: 3px solid black;\r\n\t  border-right:  3px solid black;\r\n}\r\n\r\n.caret {\r\n\tdisplay: inline-block;\r\n\twidth: 0;\r\n\theight: 0;\r\n\tmargin-left: 2px;\r\n\tvertical-align: middle;\r\n\tborder-top: 4px dashed;\r\n\tborder-top: 4px solid;\r\n\tborder-right: 4px solid transparent;\r\n\tborder-left: 4px solid transparent;\r\n}\r\n',""]),n.exports=e},function(n,e,r){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=function(n,e){var r=n[1]||"",t=n[3];if(!t)return r;if(e&&"function"==typeof btoa){var i=(a=t,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(o," */")),s=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[r].concat(s).concat([i]).join("\n")}var a,l,o;return[r].join("\n")}(e,n);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(t)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(i[a]=!0)}for(var l=0;l<n.length;l++){var o=[].concat(n[l]);t&&i[o[0]]||(r&&(o[2]?o[2]="".concat(r," and ").concat(o[2]):o[2]=r),e.push(o))}},e}}]);